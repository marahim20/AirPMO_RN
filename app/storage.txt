const handleLogin = async () => {
    try {
      const response = await fetch("http://api.airpmo.co:8000/api/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Accept: "application/json",
        },
        body: JSON.stringify({
          Email: username,
          domain_name: "app.airpmo.co",
          Password: password,
        }),
      });
      // console.log(response);
      if (response.ok) {
        console.log("Successful login");
        const data = await response.json();
        await AsyncStorage.setItem('data', JSON.stringify(data));
        //console.log(data);
        Toast.show("Login Successful", {
          duration: Toast.durations.SHORT,
          position: Toast.positions.BOTTOM,
          shadow: true,
          animation: true,
          hideOnPress: true,
          delay: 0,
        });
        const organization_id = data.user.organization_id;
        const user_id = data.user._id;
        const token = data.access_token;
        router.push("/activities");
      } else {
        console.log("no successful login");
        Toast.show("Login Failed", {
          duration: Toast.durations.SHORT,
          position: Toast.positions.BOTTOM,
          shadow: true,
          animation: true,
          hideOnPress: true,
          delay: 0,
        });
      }
    } catch (error) {
      console.error(error);
      Toast.show("Login Failed", {
        duration: Toast.durations.SHORT,
        position: Toast.positions.BOTTOM,
        shadow: true,
        animation: true,
        hideOnPress: true,
        delay: 0,
      });
      // TODO: handle failed login
    }
  };





import React, { useState } from "react";
import { Link, Stack, useRouter } from "expo-router";
import Toast from "react-native-root-toast";
import AsyncStorage from "@react-native-async-storage/async-storage";

const Image = require("../assets/th.jpeg");
import { useEffect } from "react";

import {
  StyleSheet,
  ImageBackground,
  View,
  TextInput,
  TouchableOpacity,
  Text,
  ToastAndroid,
} from "react-native";
import { SafeAreaView } from "react-native-web";

const Home = () => {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const router = useRouter();
  useEffect(() => {
    fetch("http://api.airpmo.co:8000/api/login", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify({
        Email: username,
        domain_name: "app.airpmo.co",
        Password: password,
      }),
    })
      .then((response) => response.json())
      .then((json) => {
        console.log(json);
        if (json.access_token) {
          console.log("Successful login");
          // const data = await response.json();
          AsyncStorage.setItem("data", JSON.stringify(json));
          // ToastAndroid.show("Login Successful", ToastAndroid.SHORT);
          console.log(AsyncStorage.getItem("data"));
          router.push("/activities");
        } else {
          console.log("no successful login");
          // ToastAndroid.show("Login Failed", ToastAndroid.SHORT);
        }
      })
      .catch((error) => {
        console.error(error);
        // ToastAndroid.show("Login Failed", ToastAndroid.SHORT);
      });
  }, [password, username]);

  return (
    <></>
    // <ImageBackground source={Image} style={styles.backgroundImage}>
    //   <View style={styles.overlay}>
    //     <View style={styles.container}>
    //       <Text style={styles.heading}>airpmo</Text>

    //       <TouchableOpacity style={styles.button}>
    //         <Text style={styles.buttonText}>Login</Text>
    //       </TouchableOpacity>
    //     </View>
    //   </View>
    // </ImageBackground>
  );
};

const styles = StyleSheet.create({
  backgroundImage: {
    flex: 1,
    resizeMode: "cover",
    justifyContent: "center",
  },
  overlay: {
    backgroundColor: "rgba(255,255,255,0.8)",
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
  },
  heading: {
    fontSize: 40,
    fontWeight: "bold",
    marginBottom: 50,
  },
  container: {
    width: "80%",
    backgroundColor: "white",
    padding: 20,
    borderRadius: 10,
  },
  input: {
    height: 40,
    borderColor: "gray",
    borderWidth: 1,
    borderRadius: 5,
    marginBottom: 10,
    paddingLeft: 10,
  },
  button: {
    backgroundColor: "#4CAF50",
    padding: 12,
    borderRadius: 5,
  },
  buttonText: {
    color: "white",
    textAlign: "center",
  },
});

export default Home;

------------------------------------------------------------------------------------------------------------------------------------------------------------

async function getProjects(token, organization_id) {
    try {
      var projectsJson;
      var aProject;
      let listOfProjects = [];

      console.log("getting list of projects..." + organization_id);
      let url =
        "http://app.airpmo.co:8000/api/organization/" +
        organization_id +
        "/project";
      let headers = {
        "Content-Type": "application/json",
        Accept: "application/json",
        Authorization: "Bearer " + token,
      };

      let response = await axios.get(url, { headers });

      // console.log("Response:", response.data);

      if (response.status === 200) {
        console.log("successfully obtained projects....");
        projectsJson = response.data;
        for (aProject in projectsJson) {
          listOfProjects.push(MyProject.fromJson(aProject));
        }
        let len = listOfProjects.length;
        console.log("number of projects = ", len);
        return listOfProjects;
      } else {
        return null;
      }
    } catch (error) {
      console.log("Error:", error);
      return null;
    }
  }



  ------------------------------------------
  addemp Old:

  export default class addemp 
extends Component {
  render (){
    return(
    <View style={styles.container}>
      <View style={styles.header}>
        <TouchableOpacity>
          <Ionicons name="ios-arrow-back" size={24} color="white" />
        </TouchableOpacity>
        <Text style={styles.headerText}>Job Card Details</Text>
        <View style={{width: 24}}></View>
      </View>
      <View style={styles.detailsContainer}>
        <Text style={styles.detailsText}>Removal of Gravel</Text>
      </View>
      <View style={styles.employeeContainer}>
        <Text style={styles.containerHeading}>Employee</Text>
        <TouchableOpacity style={styles.addButton}>
          <Text style={styles.addButtonText}>+</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.equipmentsContainer}>
        <Text style={styles.containerHeading}>Equipments</Text>
        <TouchableOpacity style={styles.addButton}>
          <Text style={styles.addButtonText}>+</Text>
        </TouchableOpacity>
      </View>
      <View style={styles.quantityContainer}>
        <Text style={styles.containerHeading}>Quantity achieved</Text>
      </View>
    </View>
  );
    }
  }

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  header: {
    backgroundColor: 'green',
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingTop: 48,
    paddingBottom: 16,
  },
  headerText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: 'white',
    marginLeft: 16,
  },
  detailsContainer: {
    backgroundColor: '#f0f0f0',
    paddingVertical: 24,
    alignItems: 'center',
  },
  detailsText: {
    fontSize: 24,
    fontWeight: 'bold',
  },
  employeeContainer: {
    flex : 1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  equipmentsContainer: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingHorizontal: 16,
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
  },
  addButton: {
    backgroundColor: 'green',
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 8,
  },
  addButtonText: {
    color: 'white',
    fontSize: 24,
    fontWeight: 'bold',
  },
  containerHeading: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  quantityContainer: {
    flex : 0.5,
    paddingHorizontal: 16,
    paddingVertical: 16,
    alignItems: 'center',
    justifyContent : 'center',
    borderTopWidth: 1,
    borderTopColor: '#f0f0f0',
  },
});